<resources xmlns:tools="http://schemas.android.com/tools">
    <!-- Base application theme. -->
    <style name="Theme.INV5" parent="Theme.MaterialComponents.DayNight.DarkActionBar">
        <!-- Primary brand color. -->
        <item name="colorPrimary">@color/dark_charcoal_text</item>
        <item name="colorPrimaryVariant">@color/dark_charcoal_text</item>
        <item name="colorOnPrimary">@color/white</item>
        <!-- Secondary brand color. -->
        <item name="colorSecondary">@color/accent_orange</item>
        <item name="colorSecondaryVariant">@color/accent_orange</item>
        <item name="colorOnSecondary">@color/black</item>
        <!-- Status bar color. -->
        <item name="android:statusBarColor">?attr/colorPrimaryVariant</item>
        <!-- Customize your theme here. -->
        <!-- Set window background -->
        <item name="android:windowBackground">@color/light_gray_background</item>
        <!-- Set default text color -->
    <item name="android:textColor">@color/dark_charcoal_text</item>
    <!-- Ensure primary and secondary text colors are set for framework components -->
    <item name="android:textColorPrimary">@color/dark_charcoal_text</item>
    <item name="android:textColorSecondary">@color/medium_gray</item>
    <!-- Apply shared EditText style globally -->
    <item name="android:editTextStyle">@style/Widget.App.EditText</item>
    <!-- Toolbar title color -->
    <item name="titleTextColor">@color/dark_charcoal_text</item>
    <!-- Material surface/on-surface colors so components inherit correct text color -->
    <item name="colorOnSurface">@color/dark_charcoal_text</item>
    <item name="colorOnBackground">@color/dark_charcoal_text</item>
    <!-- Text appearances -->
    <item name="textAppearanceBody1">@style/TextAppearance.App.Body1</item>
    <item name="textAppearanceBody2">@style/TextAppearance.App.Body2</item>
    <!-- Widget style overrides -->
    <item name="radioButtonStyle">@style/Widget.App.RadioButton</item>
        <!-- Make MaterialButtons inherit app styles by default -->
        <item name="materialButtonStyle">@style/Widget.App.MaterialButton.Filled</item>
        <!-- Some platforms support outlined button style attribute -->
        <item name="materialOutlinedButtonStyle">@style/Widget.App.MaterialButton.Outlined</item>
    </style>

    <style name="Theme.INV5.NoActionBar">
        <item name="windowActionBar">false</item>
        <item name="windowNoTitle">true</item>
    </style>

    <style name="Theme.INV5.AppBarOverlay" parent="ThemeOverlay.AppCompat.Dark.ActionBar" />

    <style name="Theme.INV5.PopupOverlay" parent="ThemeOverlay.AppCompat.Light" />

    <!-- App text appearances -->
    <style name="TextAppearance.App.Body1" parent="TextAppearance.MaterialComponents.Body1">
        <item name="android:textColor">@color/dark_charcoal_text</item>
    </style>

    <style name="TextAppearance.App.Body2" parent="TextAppearance.MaterialComponents.Body2">
        <item name="android:textColor">@color/dark_charcoal_text</item>
    </style>

    <!-- RadioButton widget style to force label color -->
    <style name="Widget.App.RadioButton" parent="Widget.AppCompat.CompoundButton.RadioButton">
        <item name="android:textColor">@color/dark_charcoal_text</item>
        <!-- keep default button tint behavior -->
    </style>
</resources>